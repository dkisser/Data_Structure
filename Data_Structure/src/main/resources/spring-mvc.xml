<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:task="http://www.springframework.org/schema/task"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task  
						http://www.springframework.org/schema/task/spring-task-3.1.xsd  ">  
    
    <mvc:annotation-driven>
        <!-- 消息转换器,ajax解决返回值乱码问题 -->
	    <mvc:message-converters register-defaults="true">
	      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	        <property name="supportedMediaTypes">
				<list>
					<value>text/html;charset=UTF-8</value>
					<value>application/json;charset=UTF-8</value>
					<value>text/plain;charset=UTF-8</value>
				</list>
			</property>
	      </bean>
	    </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="org.lf.admin.action" />  
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>
            	<!-- <value>application/json;charset=UTF-8</value>  -->
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> 
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 100M-->  
        <property name="maxUploadSize" value="104857600" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
    
<!--     <mvc:interceptors> -->
	  	<!-- 登录验证拦截器  -->
<!--     	<mvc:interceptor> -->
<!--     		<mvc:mapping path="/**"/> -->
    		<!-- 不包含的路径 -->
<!--     		<mvc:exclude-mapping path="/console/user/loginUI.do"/> -->
<!--     		<mvc:exclude-mapping path="/console/user/adminLoginUI.do"/> -->
<!--     		<mvc:exclude-mapping path="/console/user/login.do"/> -->
<!--     		<mvc:exclude-mapping path="/console/user/errorBrowserUI.do"/> -->
<!--     		<mvc:exclude-mapping path="/wx/**"/> -->
<!--     		<mvc:exclude-mapping path="/servlet/**"/> -->
    		<!-- 拦截器实现类 -->
<!--     		<bean class="org.lf.utils.servlet.LoginInterceptor"/> -->
<!--     	</mvc:interceptor> -->
    	
    	<!-- 微信端登录验证拦截器  -->
<!--     	<mvc:interceptor> -->
<!--     		<mvc:mapping path="/wx/**"/> -->
<!--     		<mvc:exclude-mapping path="/wx/oauth/**"/> -->
<!--     		<bean class="org.lf.utils.servlet.WXLoginInterceptor"/> -->
<!--     	</mvc:interceptor> -->
<!--     </mvc:interceptors> -->

    
    <!-- 定时器开关 识别@Scheduled-->
    <!-- <task:annotation-driven/>只配置这个属性就可以了 其他的配置是可选 -->
<!--     <task:annotation-driven scheduler="xtyjSchedule"/> -->
<!--     <task:scheduler id="xtyjSchedule" pool-size="10"/> -->

    <!-- 自动扫描该包，扫描到定时任务所在的包，用@Component注解 
    <context:component-scan base-package="org.lf.admin.action.console.sys"/>   -->  
  	
</beans>  